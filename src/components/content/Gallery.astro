---
import { Image } from "astro:assets";
import { generateGallerySequence } from "../../utils/generateGallerySequence";
import { getImagesFromFolder } from "../../utils/getImagesFromFolder";
import Modal from "../atoms/Modal.astro";

const { folderPath } = Astro.props;

const galleryImages = getImagesFromFolder(folderPath);
const layoutSequence = generateGallerySequence(galleryImages.length);

const preparedImages = await Promise.all(
    galleryImages.map(async (image, index) => {
        const importedImage = await image.importFunc();
        return {
            src: importedImage.default,
            alt:
                image.path.split("/").pop()?.split(".")[0] ||
                `gallery-${index}`,
            id: `image-${index}`,
            modalId: `modal-image-${index}`,
        };
    }),
);
---

<div class="w-full space-y-1 my-10">
    {
        layoutSequence.map((numImages, rowIndex) => (
            <div class="w-full flex gap-1">
                {Array.from({ length: numImages }).map((_, colIndex) => {
                    const imageIndex =
                        rowIndex * Math.max(...layoutSequence) + colIndex;
                    if (imageIndex >= preparedImages.length) return null;
                    const image = preparedImages[imageIndex];
                    return (
                        <div class="w-full">
                            <Image
                                src={image.src}
                                alt={image.alt}
                                class="w-full h-full object-cover cursor-pointer"
                                loading={imageIndex < 8 ? "eager" : "lazy"}
                                id={image.id}
                                data-modal-target={image.modalId}
                            />
                        </div>
                    );
                })}
            </div>
        ))
    }
</div>

{
    preparedImages.map((image, index) => (
        <Modal id={image.modalId} showNavigation={true}>
            <Image
                src={image.src}
                alt={image.alt}
                class="w-full h-full object-contain "
            />
        </Modal>
    ))
}

<script>
    const images = document.querySelectorAll('img[id^="image-"]');
    const modals = document.querySelectorAll('dialog[id^="modal-image-"]');

    images.forEach((img) => {
        img.addEventListener("click", () => {
            const modalId = img.dataset.modalTarget;
            const modal = document.getElementById(modalId);
            if (modal instanceof HTMLDialogElement) {
                modal.showModal();
            }
        });
    });

    modals.forEach((modal, index) => {
        modal.addEventListener("navigate", (e) => {
            const direction = e.detail.direction;
            let newIndex = index + direction;

            if (newIndex < 0) newIndex = modals.length - 1;
            if (newIndex >= modals.length) newIndex = 0;

            modal.close();
            modals[newIndex].showModal();
        });
    });
</script>
