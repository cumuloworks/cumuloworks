---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
const { item } = Astro.props;

function getEmbedType(url) {
    if (!url) return null;
    if (url.includes("youtube.com") || url.includes("youtu.be"))
        return "youtube";
    if (url.includes("twitter.com") || url.includes("x.com")) return "twitter";
    return null;
}

function getYoutubeId(url) {
    const regExp =
        /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
    const match = url.match(regExp);
    return match && match[2].length === 11 ? match[2] : null;
}

function getTwitterId(url) {
    const regExp =
        /(?:twitter\.com\/\w+\/status\/|x\.com\/\w+\/status\/)([0-9]+)/;
    const match = url.match(regExp);
    return match ? match[1] : null;
}

function getEmbedId(url) {
    const type = getEmbedType(url);
    let id = null;

    switch (type) {
        case "youtube":
            id = getYoutubeId(url);
            break;
        case "twitter":
            id = getTwitterId(url);
            break;
    }

    return { type, id };
}

const { type, id } = getEmbedId(item.data.embed);
const thumbnail = item.thumbnail;
---

<div
    class="w-full aspect-video relative embed-container"
    data-embed-type={type}
    data-embed-id={id}>
    <Image
        src={thumbnail}
        alt={item.data.title || "Thumbnail"}
        class={`w-full h-full object-cover ${id ? "cursor-pointer" : ""}`}
        loading="eager"
        width={1920}
    />
    {
        id && (
            <div class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-0 hover:bg-opacity-50 transition-all ease-out-expo duration-1000">
                <button class="shadow-2xl py-2 px-8 hover:scale-110 hover:bg-dark hover:text-white hover:border bg-white text-dark rounded-full font-bold flex items-center justify-center text-xl gap-2 transition-all ease-out-expo">
                    <Icon name="fa6-solid:play" />
                    <p>Play</p>
                </button>
            </div>
        )
    }
</div>

<script>
    function loadYouTubeAPI() {
        const tag = document.createElement("script");
        tag.src = "https://www.youtube.com/iframe_api";
        const firstScriptTag = document.getElementsByTagName("script")[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    }

    function onYouTubeIframeAPIReady() {
        const containers = document.querySelectorAll(".youtube-embed");
        containers.forEach((container) => {
            const youtubeId = container.getAttribute("data-youtube-id");
            if (!youtubeId) return;

            container.addEventListener("click", () => {
                new YT.Player(container, {
                    videoId: youtubeId,
                    width: "100%",
                    height: "100%",
                    events: {
                        onReady: (event) => {
                            event.target.playVideo();
                        },
                    },
                });
            });
        });
    }

    function loadTwitterWidget() {
        const script = document.createElement("script");
        script.src = "https://platform.twitter.com/widgets.js";
        script.async = true;
        script.charset = "utf-8";
        document.head.appendChild(script);
    }

    function handleEmbeds() {
        const containers = document.querySelectorAll(".embed-container");
        containers.forEach((container) => {
            const embedType = container.getAttribute("data-embed-type");
            const embedId = container.getAttribute("data-embed-id");
            if (!embedId) return;

            container.addEventListener("click", () => {
                if (embedType === "youtube") {
                    new YT.Player(container, {
                        videoId: embedId,
                        width: "100%",
                        height: "100%",
                        events: {
                            onReady: (event) => event.target.playVideo(),
                        },
                    });
                } else if (embedType === "twitter") {
                    container.innerHTML = `
                        <blockquote class="twitter-tweet" data-media-max-width="1920">
                            <a href="https://twitter.com/i/status/${embedId}"></a>
                        </blockquote>
                    `;
                    window.twttr?.widgets.load(container);
                }
            });
        });
    }

    loadYouTubeAPI();
    loadTwitterWidget();
    window.onYouTubeIframeAPIReady = () => handleEmbeds();
</script>
