---
import { Image } from "astro:assets";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import TopPageBackground from "../components/TopPageBackground.astro";
import TopPageInteractions from "../components/TopPageInteractions.astro";
import { getItemsWithThumbnails } from "../utils/contentUtils";
import "../styles/globals.css";

const projects = await getItemsWithThumbnails("projects");

const categoryDescriptions = {
	"Ads / Corporate": "Advertisements and promotional videos for businesses.",
	Entertainment: "Music videos, live productions, etc.",
};

const projectsByCategory = projects.reduce((acc, project) => {
	const category = project.data.category || "Uncategorized";
	if (!acc[category]) {
		acc[category] = {
			projects: [],
			description:
				categoryDescriptions[category] || "Projects in this category",
		};
	}
	acc[category].projects.push(project);
	return acc;
}, {});

for (const category of Object.keys(projectsByCategory)) {
	projectsByCategory[category].projects.sort(
		(a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
	);
}
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.ico" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Cumuloworks</title>
	</head>
	<body
		class="flex flex-col snap-y snap-mandatory from-cumulodark to-black bg-gradient-to-b"
	>
		<!-- <Header /> -->
		<main class="flex-grow">
			<section class="w-full h-svh bg-cumulodark relative snap-start">
				<TopPageBackground />
				<TopPageInteractions />
			</section>
			<section
				class="min-h-[calc(100svh-40px)] snap-start max-w-screen-xl mx-auto p-8 flex flex-col justify-center font-bold text-inactive"
			>
				<div
					class="grid grid-cols-1 md:grid-cols-2 gap-x-10 gap-y-20 py-20"
				>
					{
						Object.entries(projectsByCategory).map(
							([
								category,
								{ projects: categoryProjects, description },
							]) => (
								<div>
									<h2 class="text-4xl  hover:text-active uppercase mb-2">
										{category}
									</h2>
									<p class="mb-8">{description}</p>
									<div class="grid grid-cols-2 gap-4">
										{categoryProjects
											.slice(0, 6)
											.map((project) => (
												<a
													href={`/projects/${project.slug}`}
													class="relative group"
												>
													{project.thumbnail && (
														<Image
															src={
																project.thumbnail
															}
															alt={`Thumbnail for ${project.data.title}`}
															width={400}
															height={300}
															class="w-full aspect-video object-cover brightness-100 group-hover:brightness-50 transition-all"
														/>
													)}
													<div class="opacity-0 group-hover:opacity-100 absolute bottom-0 left-0 right-0} text-white p-2">
														<h4 class="text-sm font-semibold">
															{project.data.title}
														</h4>
													</div>
												</a>
											))}
									</div>
								</div>
							),
						)
					}
				</div>
			</section>
		</main>
		<Footer />
	</body>
</html>
