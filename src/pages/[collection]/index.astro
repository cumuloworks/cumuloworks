---
import { Icon } from "astro-icon/components";
import ItemGrid from "../../components/content/ItemGrid.astro";
import ItemList from "../../components/content/ItemList.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import "../../styles/markdown.css";
import { categoryDictionary } from "../../utils/categoryDictionary";
import { getItemsWithThumbnails } from "../../utils/contentUtils";

console.log(Astro.props);

export async function getStaticPaths() {
    const collections = ["projects", "blogs", "downloads"];
    return collections.map((collection) => ({
        params: { collection },
        props: { collection },
    }));
}

const { collection } = Astro.props;
const items = await getItemsWithThumbnails(collection);
const categories = [...new Set(items.map((item) => item.data.category))];
const title = collection.charAt(0).toUpperCase() + collection.slice(1);

function generateCategoryStyles(categories: string[]) {
    return categories
        .map(
            (category) =>
                `#items-container[data-filter="${category}"] .grid-item:not([data-category="${category}"]) {
            display: none;
        }`,
        )
        .join("\n");
}
---

<BaseLayout title={title}>
    <div class="w-full max-w-screen-xl mx-auto mb-10">
        <div
            class="w-full flex flex-col md:flex-row items-center justify-between mb-10 gap-5">
            <h1 class="text-center uppercase text-3xl md:text-4xl font-bold">
                {title}
            </h1>
            <div
                id="filter-controls"
                class="rounded-full border border-cumulo-inactive text-sm">
                <button
                    data-filter="all"
                    class="filter-button px-5 py-1 rounded-full transition-all ease-out-expo hover:scale-105 active"
                    >All</button
                >
                {
                    categories.map((category: string) => (
                        <button
                            data-filter={category}
                            class="filter-button px-5 py-1 rounded-full transition-all ease-out-expo hover:scale-105">
                            {categoryDictionary[category].name}
                        </button>
                    ))
                }
            </div>
        </div>
        <div id="items-container">
            {
                collection === "projects" ? (
                    <ItemGrid items={items} />
                ) : (
                    <ItemList items={items} />
                )
            }
        </div>
    </div>
    <button
        id="backToTopButton"
        class="mx-auto flex items-center gap-5 justify-center md:justify-end uppercase group h-10"
        >Back to the top
        <Icon
            name="fa6-solid:arrow-up"
            class="size-5 group-hover:size-10 transition-all ease-out-expo"
        />
    </button>
</BaseLayout>

<style is:global>
    #filter-controls button.active {
        @apply bg-cumulodark text-active;
    }

    #items-container[data-filter="all"] .grid-item {
        display: block;
    }
</style>

<style is:global set:html={generateCategoryStyles(categories)}></style>

<script>
    const filterButtons = document.querySelectorAll(".filter-button");
    const itemsContainer = document.getElementById("items-container");
    const backToTopButton = document.getElementById("backToTopButton");

    function setActiveFilter(button) {
        filterButtons.forEach((btn) => btn.classList.remove("active"));
        button.classList.add("active");
        itemsContainer.dataset.filter = button.dataset.filter;
    }

    filterButtons.forEach((button) => {
        button.addEventListener("click", () => setActiveFilter(button));
    });

    setActiveFilter(
        document.querySelector('.filter-button[data-filter="all"]'),
    );

    if (backToTopButton) {
        backToTopButton.addEventListener("click", () => {
            window.scrollTo({
                top: 0,
                behavior: "smooth",
            });
        });
    }
</script>
