---
import type { ContentEntryMap } from "astro:content";
import { getCollection } from "astro:content";
import Gallery from "../../components/content/Gallery.astro";
import Hero from "../../components/content/Hero.astro";
import ContentLayout from "../../layouts/ContentLayout.astro";
import "../../styles/globals.css";
import { categoryDictionary } from "../../utils/categoryDictionary";
import { getItemsWithThumbnails } from "../../utils/contentUtils";
import { DEFAULT_DATA } from "../../utils/default_data";

export async function getStaticPaths() {
	const collections = ["projects", "blogs", "downloads"];
	const allPaths = await Promise.all(
		collections.map(async (collection) => {
			const items = await getCollection(
				collection as keyof ContentEntryMap,
			);
			return items.map((entry) => ({
				params: {
					collection,
					slug: entry.slug,
				},
				props: { entry, collection },
			}));
		}),
	);
	return allPaths.flat();
}

const { entry, collection } = Astro.props;
const { Content } = await entry.render();

const items = await getItemsWithThumbnails(collection);
const currentIndex = items.findIndex((item) => item.slug === entry.slug);
const prevItem = items[currentIndex + 1] || null;
const nextItem = items[currentIndex - 1] || null;

const galleryFolderPath = `/src/content/${collection}/${entry.slug}/`;

const thumbnailUrl = new URL(
	items[currentIndex].thumbnail.src,
	Astro.url,
).toString();

const { title, description, category, date } = {
	...DEFAULT_DATA,
	...entry.data,
};
---

<ContentLayout
	{title}
	{description}
	category={categoryDictionary[category].name}
	{date}
	prevItem={prevItem}
	nextItem={nextItem}
	ogImage={thumbnailUrl}>
	<div slot="hero">
		<Hero item={items[currentIndex]} />
	</div>
	<div class="max-w-screen-md mx-auto">
		<Content />
	</div>
	{collection === "projects" && <Gallery folderPath={galleryFolderPath} />}
</ContentLayout>
